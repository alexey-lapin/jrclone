name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

#      - name: Upload service-jar
#        uses: actions/upload-artifact@v2
#        with:
#          name: service-jar
#          path: |
#            service/build/libs/realworld-backend-micronaut-*.jar
#          retention-days: 7

  graal-11-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup GraalVM CE
        uses: rinx/setup-graalvm-ce@v0.0.5
        with:
          graalvm-version: "21.2.0"
          java-version: "java11"
          native-image: "true"

      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x check

      - name: Build Native Image
        run: native-image --no-fallback -jar jrclone-cli/build/libs/jrclone-cli-all.jar -H:Name=jrclone-cli-app -H:Class=com.github.alexeylapin.jrclone.JRClone -H:+ReportExceptionStackTraces

      - name: Upload service-native-linux-8
        uses: actions/upload-artifact@v2
        with:
          name: service-native-linux-8
          path: |
            **/jrclone-cli-app

  graal-11-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ilammy/msvc-dev-cmd@v1.5.0

      - uses: microsoft/setup-msbuild@v1

      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 21.2.0
          native-image: true

      #      - uses: actions/setup-node@v1

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists
          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
          restore-keys: |
            test-${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x check

      - name: Build Native Image
        shell: powershell
        run: native-image --no-fallback -jar jrclone-cli/build/libs/jrclone-cli-all.jar -H:Name=jrclone -H:Class=com.github.alexeylapin.jrclone.JRClone -H:+ReportExceptionStackTraces

      - name: Upload service-native-linux-8
        uses: actions/upload-artifact@v2
        with:
          name: service-native-windows-8
          path: |
            **/jrclone.exe

#  coverage:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#
#      - name: Cache Gradle wrapper and dependencies
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches/
#            ~/.gradle/wrapper/dists
#          key: test-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/gradle.properties', 'gradle/**', 'buildSrc/src/main/**') }}
#          restore-keys: |
#            test-${{ runner.os }}-gradle-
#      - name: 'Run tests with JaCoCo'
#        shell: bash
#        run: |
#          ./gradlew --version
#          ./gradlew --scan --no-parallel --stacktrace --warning-mode=all jacocoReport
#      - uses: codecov/codecov-action@v1

#  release-notes:
#    runs-on: ubuntu-latest
#    needs: [build, graal-8-linux]
#    if: startsWith(github.ref, 'refs/tags/')
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Build Changelog
#        id: github_release
#        uses: mikepenz/release-changelog-builder-action@v1
#        with:
#          configuration: ".github/release-changelog-builder.json"
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Download service-jar
#        uses: actions/download-artifact@v2
#      #        with:
#      #          name: service-jar
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        with:
#          body: ${{ steps.github_release.outputs.changelog }}
#          draft: true
#          files: |
#            realworld-backend-micronaut-*
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}